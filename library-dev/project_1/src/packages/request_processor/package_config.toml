#############################
# 本番定義 production
#############################
# リファレンス更新明細ファイル
[production]

#############################
# リグレ定義 regression
#############################
# リファレンス更新明細ファイル
[regression]

#############################
# 開発定義 develop
#############################
# リファレンス更新明細ファイル
[develop]

#############################
# local定義 local
#############################
# リファレンス更新明細ファイル
[local]
[local.excel_definition]
UPDATE_RECORD_JINJI = '一括申請/人事/人事データのコード情報報告*.xlsx'
UPDATE_RECORD_JINJI_SHEET_NAME = 'SLKBTNJH'
UPDATE_RECORD_JINJI_SHEET_SKIPROWS = 0
UPDATE_RECORD_JINJI_SHEET_USECOLS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]
#
UPDATE_RECORD_KOKUKI = '一括申請/国企/海外組織情報報告*.xlsx'
UPDATE_RECORD_KOKUKI_SHEET_NAME = '海外組織入力シート(変更登録)'
UPDATE_RECORD_KOKUKI_SHEET_SKIPROWS = 0
UPDATE_RECORD_KOKUKI_SHEET_USECOLS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
#
UPDATE_RECORD_KANREN_WITH = '一括申請/関連ダミー課あり/関連*一括申請フォーム*.xlsx'
UPDATE_RECORD_KANREN_WITH_SHEET_NAME = '関連会社入力シート'
UPDATE_RECORD_KANREN_WITH_SHEET_SKIPROWS = 0
UPDATE_RECORD_KANREN_WITH_SHEET_USECOLS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
#
UPDATE_RECORD_KANREN_WITHOUT = '一括申請/関連ダミー課なし/人事データのコード情報報告*.xlsx'
UPDATE_RECORD_KANREN_WITHOUT_SHEET_NAME = 'SLKBTNJH'
UPDATE_RECORD_KANREN_WITHOUT_SHEET_SKIPROWS = 0
UPDATE_RECORD_KANREN_WITHOUT_SHEET_USECOLS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]

# 日本語ExcelColumnをPythonColumnに変換/人事
[local.excel_definition_mapping_jinji]
'報告日' = 'report_date'
'no' =  'application_number'
'有効日付' = 'effective_date'
'種類' = 'application_type'
'対象' = 'target_org'
'部門コード' = 'business_unit_code'
'親部店コード' = 'parent_branch_code'
'部店コード' = 'branch_code'
'部店名称' = 'branch_name'
'部店名称(英語)' = 'branch_name_en'
'課/エリアコード' = 'section_area_code'
'課/エリア名称' = 'section_area_name'
'課/エリア名称(英語)' = 'section_area_name_en'
'常駐部店コード' = 'resident_branch_code'
'常駐部店名称' = 'resident_branch_name'
'純新規店の組織情報受渡し予定日(開店日基準)' = 'new_org_info_transfer_date'
'共通認証受渡し予定日(人事データ反映基準)' = 'aaa_transfer_date'
'備考' = 'remarks'
'部店ｶﾅ' = 'organization_name_kana'

# 日本語ExcelColumnをPythonColumnに変換/国企
[local.excel_definition_mapping_kokuki]
'報告日' = 'report_date'
'no' = 'application_number'
'登録予定日(yyyy/mm/dd)' = 'effective_date'
'種類(新規変更廃止)' = 'application_type'
'対象(課・エリア/中間階層)' = 'target_org'
'部店店番' = 'branch_code'
'部店名称 日本語' = 'branch_name_ja'
'部店名称 英語' = 'branch_name_en'
'中間階層コード' = 'intermediate_level_code'
'中間階層名称:日本語' = 'intermediate_level_name_ja'
'中間階層名称:英語' = 'intermediate_level_name_en'
'中間階層略称:日本語' = 'intermediate_level_abbr_ja'
'中間階層略称:英語' = 'intermediate_level_abbr_en'
'課・エリアコード' = 'section_area_code'
'課・エリア名称:日本語' = 'section_area_name_ja'
'課・エリア名称:英語' = 'section_area_name_en'
'課・エリア略称:日本語' = 'section_area_abbr_ja'
'課・エリア略称:英語' = 'section_area_abbr_en'
'共通認証受渡予定日' = 'aaa_transfer_date'
'変更種別・詳細旧名称・略語' = 'change_details'

# 日本語ExcelColumnをPythonColumnに変換/関連
[local.excel_definition_mapping_kanren_with]
'種類' = 'application_type'
'対象' = 'target_org'
'部門コード' = 'business_unit_code'
'親部店コード' = 'parent_branch_code'
'部店コード' = 'branch_code'
'部店名称' = 'branch_name'
'課Grコード' = 'section_gr_code'
'課Gr名称' = 'section_gr_name'
'課名称(英語)' = 'section_name_en'
'共通認証受渡し予定日' = 'aaa_transfer_date'
#'部店カナ' = 'organization_name_kana'
'課名称(カナ)' = 'section_name_kana'
'課名称(略称)' = 'section_name_abbr'
#'BPR対象/対象外フラグ' = 'bpr_target_flag'

# 一括申請データを統合レイアウトへ変換定義,column順定義 
[local.layout]
unified_layout = [
'ulid',
'form_type',
'application_type',
'target_org',
'business_unit_code',
'parent_branch_code',
'branch_code',
'branch_name',
'section_gr_code',
'section_gr_name',
'organization_name_kana',
'resident_branch_code',
'resident_branch_name',
'aaa_transfer_date',
'internal_sales_dept_code',
'internal_sales_dept_name',
'business_and_area_code',
'area_name',
'remarks',
'section_name_en',
'section_name_kana',
'section_name_abbr',
'bpr_target_flag',
]

# Factory定義/class動的生成
[local.processor_factory]
jinji = "src.packages.request_processor.processor_factory.JinjiProcessorFactory"
kokuki = "src.packages.request_processor.processor_factory.KokukiProcessorFactory"
kanren_with = "src.packages.request_processor.processor_factory.KanrenWithProcessorFactory"
kanren_without = "src.packages.request_processor.processor_factory.KanrenWithoutProcessorFactory"

[local.model_factory]
jinji = "src.packages.request_processor.model_factory.JinjiModelFactory"
kokuki = "src.packages.request_processor.model_factory.KokukiModelFactory"
kanren_with = "src.packages.request_processor.model_factory.KanrenWithModelFactory"
kanren_without = "src.packages.request_processor.model_factory.KanrenWithoutModelFactory"

[local.file_configuration_factory]
jinji = "src.packages.request_processor.file_configuration_factory.JinjiFileConfigurationFactory"
kokuki = "src.packages.request_processor.file_configuration_factory.KokukiFileConfigurationFactory"
kanren_with = "src.packages.request_processor.file_configuration_factory.KanrenWithFileConfigurationFactory"
kanren_without = "src.packages.request_processor.file_configuration_factory.KanrenWithoutFileConfigurationFactory"